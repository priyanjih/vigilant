---
# Enhanced Service Configuration for Kube Proxy Down

# Service Metadata
name: "KubeProxyDown"
description: "Monitors kube-proxy availability and network functionality"
version: "1.1"
tags: ["kubernetes", "networking", "infrastructure", "proxy", "critical"]
maintainer: "platform-team@company.com"

# Alert Matching
alert_pattern: "KubeProxyDown"
severity_levels: ["critical"]

# Data Sources
data_sources:
  elasticsearch:
    index_pattern: "${ES_INDEX_PATTERN:-fluentbit-*}"
    time_range_minutes: 30
    scan_limit: 800
    namespace_filter: "kube-system"
    required_fields: ["@timestamp", "log", "kubernetes.container_name", "kubernetes.namespace_name"]
  
  log_file: "/var/log/kubernetes/kube-proxy.log"

# Symptom Detection
log_patterns:
  - name: "proxy_startup_failed"
    description: "Kube-proxy startup failures"
    regex: "(?i)(failed.*start|startup.*error|initialization.*failed)"
    severity: "critical"
    
  - name: "iptables_error"
    description: "IPTables configuration errors"
    regex: "(?i)(iptables.*error|iptables.*failed|netfilter.*error)"
    severity: "critical"
    
  - name: "service_sync_error"
    description: "Service synchronization failures"
    regex: "(?i)(service.*sync.*error|endpoint.*sync.*failed)"
    severity: "critical"
    
  - name: "network_policy_error"
    description: "Network policy configuration errors"
    regex: "(?i)(network.*policy.*error|policy.*sync.*failed)"
    severity: "warning"
    
  - name: "conntrack_error"
    description: "Connection tracking errors"
    regex: "(?i)(conntrack.*error|connection.*tracking.*failed)"
    severity: "warning"
    
  - name: "port_allocation_error"
    description: "Port allocation failures"
    regex: "(?i)(port.*allocation.*failed|nodeport.*error|cannot.*bind)"
    severity: "critical"
    
  - name: "dns_resolution_error"
    description: "DNS resolution failures"
    regex: "(?i)(dns.*resolution.*failed|name.*resolution.*error)"
    severity: "warning"
    
  - name: "cluster_cidr_error"
    description: "Cluster CIDR configuration errors"
    regex: "(?i)(cluster.*cidr.*error|ip.*range.*invalid)"
    severity: "critical"
    
  - name: "api_server_connection_error"
    description: "API server connection issues"
    regex: "(?i)(api.*server.*unreachable|connection.*refused.*api|unable.*connect.*api)"
    severity: "critical"
    
  - name: "process_crash"
    description: "Process crashes and fatal errors"
    regex: "(?i)(panic|segmentation.*fault|fatal.*error|process.*died)"
    severity: "critical"

# Metrics Monitoring
metrics:
  - name: "KubeProxyUp"
    description: "Kube-proxy process availability"
    query_tpl: 'up{job="kube-proxy"}'
    operator: "<"
    threshold: 1
    weight: 10
    unit: "boolean"
  
  - name: "NodesReady"
    description: "Node readiness status"
    query_tpl: 'kube_node_status_condition{condition="Ready",status="true"}'
    operator: "<"
    threshold: 1
    weight: 3
    unit: "count"
    
  - name: "ServiceEndpoints"
    description: "Service endpoint availability"
    query_tpl: 'kube_endpoint_info'
    operator: "<"
    threshold: 1
    weight: 2
    unit: "count"
    
  - name: "PodNetworkUnavailable"
    description: "Pod network availability check"
    query_tpl: 'kube_node_status_condition{condition="NetworkUnavailable",status="true"}'
    operator: ">"
    threshold: 0
    weight: 4
    unit: "count"
    
  - name: "KubeSystemPodsReady"
    description: "System pods ready in kube-system namespace"
    query_tpl: 'kube_pod_status_ready{condition="true",namespace="kube-system"}'
    operator: "<"
    threshold: 5
    weight: 2
    unit: "count"
    
  - name: "CoreDNSPodsReady"
    description: "CoreDNS pods ready status"
    query_tpl: 'kube_pod_status_ready{condition="true",namespace="kube-system"} and on(pod) kube_pod_info{pod=~"coredns.*"}'
    operator: "<"
    threshold: 1
    weight: 3
    unit: "count"
    
  - name: "NodeMemoryPressure"
    description: "Node memory pressure indicator"
    query_tpl: 'kube_node_status_condition{condition="MemoryPressure",status="true"}'
    operator: ">"
    threshold: 0
    weight: 2
    unit: "count"
    
  - name: "APIServerUp"
    description: "API server availability"
    query_tpl: 'up{job="apiserver"}'  
    operator: "<"
    threshold: 1
    weight: 3
    unit: "boolean"
    
  - name: "ServiceCount"
    description: "Kubernetes services count"
    query_tpl: 'kube_service_info'
    operator: "<"
    threshold: 1
    weight: 1
    unit: "count"

# LLM Analysis Context
analysis_context:
  service_type: "kubernetes_infrastructure"
  criticality: "critical"
  common_causes:
    - "kube_proxy_process_down"
    - "iptables_rule_conflicts"
    - "network_policy_misconfiguration"
    - "api_server_connectivity_issues"
    - "node_resource_exhaustion"
    - "dns_resolution_failures"
    - "cluster_networking_issues"
  escalation_path: "platform-team → kubernetes-admin → infrastructure-team"