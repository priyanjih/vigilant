# Save as: ../../config/services/kubernetes-pods.yaml
service: "kubernetes-pods"
logFile: ""  # Optional fallback if you have k8s logs in files

# Log patterns to look for in Elasticsearch
logPatterns:
  - label: "pod_crash_loop"
    regex: "CrashLoopBackOff|Back-off restarting failed container"
  - label: "image_pull_error"
    regex: "Failed to pull image|ImagePullBackOff|ErrImagePull"
  - label: "pod_eviction"
    regex: "Evicted|eviction|The node was low on resource"
  - label: "scheduling_failure"
    regex: "FailedScheduling|Insufficient|PodFitsHostPorts"
  - label: "volume_mount_error"
    regex: "MountVolume|FailedMount|Unable to mount volumes"
  - label: "readiness_probe_failure"
    regex: "Readiness probe failed|Liveness probe failed"
  - label: "out_of_memory"
    regex: "OOMKilled|Out of memory|memory limit exceeded"
  - label: "container_creation_error"
    regex: "Failed to create container|container failed to start"

# Metrics to correlate with the pod status issues  
metrics:
  - name: "pending_pods"
    query: 'sum by (namespace) (kube_pod_status_phase{phase="Pending"})'
    operator: ">"
    threshold: 0
  - name: "failed_pods"
    query: 'sum by (namespace) (kube_pod_status_phase{phase="Failed"})'
    operator: ">"
    threshold: 0
  - name: "unknown_pods"
    query: 'sum by (namespace) (kube_pod_status_phase{phase="Unknown"})'
    operator: ">"
    threshold: 0
  - name: "pod_restart_rate"
    query: 'rate(kube_pod_container_status_restarts_total[5m]) * 60'
    operator: ">"
    threshold: 1
  - name: "pods_not_ready"
    query: 'sum by (namespace) (kube_pod_status_ready{condition="false"})'
    operator: ">"
    threshold: 0
  - name: "node_memory_pressure"
    query: 'kube_node_status_condition{condition="MemoryPressure",status="true"}'
    operator: ">"
    threshold: 0
  - name: "node_disk_pressure"
    query: 'kube_node_status_condition{condition="DiskPressure",status="true"}'
    operator: ">"
    threshold: 0